version: "3.8"

services:
  # -------------------------
  # HDFS (Hadoop Distributed File System)
  # -------------------------
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=klm_hadoop_cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_namenode_name_dir=/hadoop/dfs/name
      - HDFS_CONF_dfs_replication=1
    volumes:
      - hdfs_namenode:/hadoop/dfs/name
    ports:
      - "9870:9870"  # Web UI
      - "9000:9000"  # NameNode RPC
    networks:
      - klm_net

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_datanode_data_dir=/hadoop/dfs/data
      - HDFS_CONF_dfs_replication=1
    volumes:
      - hdfs_datanode:/hadoop/dfs/data
    ports:
      - "9864:9864"  # DataNode UI
    networks:
      - klm_net

  # -------------------------
  # Spark
  # -------------------------
  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"  # Spark Master UI
      - "7077:7077"  # Spark Master RPC
    networks:
      - klm_net

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"  # Spark Worker UI
    networks:
      - klm_net

  # -------------------------
  # Airflow
  # -------------------------
  airflow-init:
    image: apache/airflow:2.9.0
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _PIP_ADDITIONAL_REQUIREMENTS=
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./src/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    networks:
      - klm_net

  airflow-webserver:
    image: apache/airflow:2.9.0
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - "8085:8080"  # Airflow Web UI
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./src/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    command: webserver
    networks:
      - klm_net

  airflow-scheduler:
    image: apache/airflow:2.9.0
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    user: "${AIRFLOW_UID:-50000}:0"
    volumes:
      - ./src/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - klm_net

volumes:
  hdfs_namenode:
  hdfs_datanode:
  airflow_logs:
  airflow_plugins:

networks:
  klm_net:
    driver: bridge
